#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é
"""

import asyncio
import logging
import sys
import os
from typing import Optional

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –º–æ–¥—É–ª—ñ–≤
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from telegram_publisher import TelegramPublisher

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout)
    ]
)
logger = logging.getLogger(__name__)

async def test_video_preview():
    """–¢–µ—Å—Ç—É—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é"""
    try:
        logger.info("üé¨ –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é...")
        
        publisher = TelegramPublisher()
        
        # –¢–µ—Å—Ç–æ–≤–∏–π iframe URL
        test_video_url = "https://tsn.ua/b-iframe-widgets/9e81fa4e-ebbc-4687-ae3d-2f730c1dd210"
        
        logger.info(f"üìπ –¢–µ—Å—Ç—É—î–º–æ URL: {test_video_url}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é
        preview_video = await publisher.create_video_preview(test_video_url)
        
        if preview_video:
            logger.info(f"‚úÖ –í—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ: {len(preview_video)} bytes")
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
            with open('test_preview.mp4', 'wb') as f:
                f.write(preview_video)
            logger.info("üíæ –í—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é –∑–±–µ—Ä–µ–∂–µ–Ω–æ —è–∫ test_preview.mp4")
            
            return True
        else:
            logger.warning("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é: {e}")
        return False

async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é")
    
    try:
        success = await test_video_preview()
        
        if success:
            logger.info("‚úÖ –¢–µ—Å—Ç –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ")
        else:
            logger.warning("‚ö†Ô∏è –¢–µ—Å—Ç –≤—ñ–¥–µ–æ –ø—Ä–µ–≤—å—é –Ω–µ –ø—Ä–æ–π—à–æ–≤")
            
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ —Ç–µ—Å—Ç—ñ: {e}")
    finally:
        logger.info("üëã –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É")

if __name__ == "__main__":
    asyncio.run(main()) 