import asyncio
import logging
import random
from datetime import datetime, time, timedelta
from typing import List
from telegram_publisher import TelegramPublisher
import pytz

logger = logging.getLogger(__name__)

class MemorialMessageScheduler:
    """–ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –¥–ª—è —â–æ–¥–µ–Ω–Ω–∏—Ö –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –æ 9:00 –∑–∞ –∫–∏—ó–≤—Å—å–∫–∏–º —á–∞—Å–æ–º"""
    
    def __init__(self, publisher: TelegramPublisher):
        self.publisher = publisher
        self.target_time = time(9, 0)  # 9:00 —Ä–∞–Ω–∫—É
        self.last_sent_date = None
        
        # –†—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω—ñ —Ç–µ–∫—Å—Ç–∏ –¥–ª—è –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        self.memorial_templates = [
            "üïØÔ∏è –•–≤–∏–ª–∏–Ω–∞ –º–æ–≤—á–∞–Ω–Ω—è –∑–∞ –Ω–∞—à–∏–º–∏ –≥–µ—Ä–æ—è–º–∏, —è–∫—ñ –≤—ñ–¥–¥–∞–ª–∏ –∂–∏—Ç—Ç—è –∑–∞ –Ω–µ–∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –£–∫—Ä–∞—ó–Ω–∏.\n\nüíî –í—ñ—á–Ω–∞ –ø–∞–º'—è—Ç—å –∑–∞—Ö–∏—Å–Ω–∏–∫–∞–º, —è–∫—ñ –±–æ—Ä–æ–Ω–∏–ª–∏ –Ω–∞—à—É –∑–µ–º–ª—é –≤—ñ–¥ –≤–æ—Ä–æ–≥–∞.\n\nüôè –á—Ö–Ω—è –∂–µ—Ä—Ç–≤–∞ –Ω–µ –±—É–¥–µ –∑–∞–±—É—Ç–∞. –°–ª–∞–≤–∞ –ì–µ—Ä–æ—è–º! üá∫üá¶",
            
            "üïØÔ∏è –û 9:00 —Ä–∞–Ω–∫—É –ø–∞–º'—è—Ç–∞—î–º–æ –Ω–∞—à–∏—Ö –ø–æ–ª–µ–≥–ª–∏—Ö –≤–æ—ó–Ω—ñ–≤.\n\nüíôüíõ –ö–æ–∂–µ–Ω –¥–µ–Ω—å –ø–æ—á–∏–Ω–∞—î–º–æ –∑ –≤–¥—è—á–Ω–æ—Å—Ç—ñ —Ç–∏–º, —Ö—Ç–æ –ø–æ–∫–ª–∞–≤ –∂–∏—Ç—Ç—è –∑–∞ –Ω–∞—à—É —Å–≤–æ–±–æ–¥—É.\n\nüôè –í—ñ—á–Ω–∞ –ø–∞–º'—è—Ç—å –≥–µ—Ä–æ—è–º –£–∫—Ä–∞—ó–Ω–∏! üá∫üá¶",
            
            "üïØÔ∏è –•–≤–∏–ª–∏–Ω–∞ —Ç–∏—à—ñ –∑–∞ —Ç–∏—Ö, —Ö—Ç–æ –±—ñ–ª—å—à–µ –Ω–µ –ø–æ–≤–µ—Ä–Ω–µ—Ç—å—Å—è –¥–æ–¥–æ–º—É.\n\nüíî –ù–∞—à—ñ –∑–∞—Ö–∏—Å–Ω–∏–∫–∏ –∑–∞–≥–∏–Ω—É–ª–∏, —â–æ–± –º–∏ –º–æ–≥–ª–∏ –∂–∏—Ç–∏ —É –≤—ñ–ª—å–Ω—ñ–π –£–∫—Ä–∞—ó–Ω—ñ.\n\nüôè –ü–∞–º'—è—Ç–∞—î–º–æ. –°–∫–æ—Ä–±–æ—Ç–∏–º–æ. –ü–∏—à–∞—î–º–æ—Å—è. –°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ! üá∫üá¶",
            
            "üïØÔ∏è –©–æ—Ä–∞–Ω–∫—É –æ 9:00 –≤—à–∞–Ω–æ–≤—É—î–º–æ –ø–∞–º'—è—Ç—å –ø–æ–ª–µ–≥–ª–∏—Ö –≥–µ—Ä–æ—ó–≤.\n\nüíî –í–æ–Ω–∏ –±–æ—Ä–æ–Ω–∏–ª–∏ –∫–æ–∂–µ–Ω –º–µ—Ç—Ä –Ω–∞—à–æ—ó –∑–µ–º–ª—ñ, –∫–æ–∂–Ω—É —É–∫—Ä–∞—ó–Ω—Å—å–∫—É —Ä–æ–¥–∏–Ω—É.\n\nüôè –á—Ö–Ω—ñ–π –ø–æ–¥–≤–∏–≥ –∂–∏–≤–µ –≤ –Ω–∞—à–∏—Ö —Å–µ—Ä—Ü—è—Ö –Ω–∞–∑–∞–≤–∂–¥–∏. –ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞! üá∫üá¶",
            
            "üïØÔ∏è –•–≤–∏–ª–∏–Ω–∞ –º–æ–≤—á–∞–Ω–Ω—è –∑–∞ –Ω–∞—à–∏—Ö –≤–æ—ó–Ω—ñ–≤, —è–∫—ñ –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –∑ –ø–æ–ª—è –±–æ—é.\n\nüíôüíõ –í–æ–Ω–∏ –≤—ñ–¥–¥–∞–ª–∏ –Ω–∞–π–¥–æ—Ä–æ–∂—á–µ - —Å–≤–æ—î –∂–∏—Ç—Ç—è - –∑–∞ –º–∞–π–±—É—Ç–Ω—î –£–∫—Ä–∞—ó–Ω–∏.\n\nüôè –í—ñ—á–Ω–∞ –ø–∞–º'—è—Ç—å –∑–∞—Ö–∏—Å–Ω–∏–∫–∞–º –í—ñ—Ç—á–∏–∑–Ω–∏! üá∫üá¶",
            
            "üïØÔ∏è –û –¥–µ–≤'—è—Ç—ñ–π —Ä–∞–Ω–∫—É –ø–∞–º'—è—Ç–∞—î–º–æ —Ç–∏—Ö, —Ö—Ç–æ –ø–æ–∫–ª–∞–≤ –∂–∏—Ç—Ç—è –∑–∞ –£–∫—Ä–∞—ó–Ω—É.\n\nüíî –ö–æ–∂–µ–Ω –ø–æ–ª–µ–≥–ª–∏–π –≥–µ—Ä–æ–π - —Ü–µ –≤—Ç—Ä–∞—á–µ–Ω–∞ –º—Ä—ñ—è, –Ω–µ–¥–æ–∂–∏—Ç–µ –∂–∏—Ç—Ç—è, –Ω–µ–∑–¥—ñ–π—Å–Ω–µ–Ω—ñ –ø–ª–∞–Ω–∏.\n\nüôè –ê–ª–µ —ó—Ö–Ω—è –∂–µ—Ä—Ç–≤–∞ –¥–∞–ª–∞ –Ω–∞–º –Ω–∞–¥—ñ—é –Ω–∞ –ø–µ—Ä–µ–º–æ–≥—É. –°–ª–∞–≤–∞ –ì–µ—Ä–æ—è–º! üá∫üá¶",
            
            "üïØÔ∏è –•–≤–∏–ª–∏–Ω–∞ —Å–∫–æ—Ä–±–æ—Ç–∏ –∑–∞ –Ω–∞—à–∏–º–∏ –∑–∞—Ö–∏—Å–Ω–∏–∫–∞–º–∏.\n\nüíî –í–æ–Ω–∏ –π—à–ª–∏ –≤ –±—ñ–π, –∑–Ω–∞—é—á–∏ —Ü—ñ–Ω—É —Å–≤–æ–±–æ–¥–∏. –í–æ–Ω–∏ –±–æ—Ä–æ–ª–∏—Å—è –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–¥–∏—Ö—É.\n\nüôè –á—Ö–Ω—è –º—É–∂–Ω—ñ—Å—Ç—å –Ω–∞–¥–∏—Ö–∞—î –Ω–∞—Å –∂–∏—Ç–∏ —ñ –ø–µ—Ä–µ–º–∞–≥–∞—Ç–∏. –í—ñ—á–Ω–∞ –ø–∞–º'—è—Ç—å! üá∫üá¶",
            
            "üïØÔ∏è –©–æ–¥–Ω—è –æ 9:00 –≤—à–∞–Ω–æ–≤—É—î–º–æ –ø–∞–º'—è—Ç—å –ø–æ–ª–µ–≥–ª–∏—Ö –≤–æ—ó–Ω—ñ–≤.\n\nüíôüíõ –í–æ–Ω–∏ –∑–∞—Ö–∏—â–∞–ª–∏ –Ω–µ –ª–∏—à–µ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—é, –∞ –π –Ω–∞—à—ñ —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ, –Ω–∞—à—É —ñ–¥–µ–Ω—Ç–∏—á–Ω—ñ—Å—Ç—å.\n\nüôè –á—Ö–Ω—ñ–π –ø–æ–¥–≤–∏–≥ –±—É–¥–µ –∂–∏—Ç–∏ –≤ –ø–∞–º'—è—Ç—ñ –ø–æ–∫–æ–ª—ñ–Ω—å. –ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞! üá∫üá¶",
            
            "üïØÔ∏è –•–≤–∏–ª–∏–Ω–∞ —Ç–∏—à—ñ –∑–∞ —Ç–∏—Ö, —Ö—Ç–æ –∑–∞–≥–∏–Ω—É–≤ –∑–∞ –Ω–µ–∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –£–∫—Ä–∞—ó–Ω–∏.\n\nüíî –ö–æ–∂–µ–Ω –¥–µ–Ω—å –Ω–∞—à–æ—ó —Å–≤–æ–±–æ–¥–∏ –æ–ø–ª–∞—á–µ–Ω–∏–π —ó—Ö–Ω—å–æ—é –∫—Ä–æ–≤'—é —Ç–∞ –∂–∏—Ç—Ç—è–º.\n\nüôè –ü–∞–º'—è—Ç–∞—î–º–æ –∫–æ–∂–Ω–æ–≥–æ –≥–µ—Ä–æ—è. –î—è–∫—É—î–º–æ –∑–∞ –º–∏—Ä –Ω–∞–¥ –≥–æ–ª–æ–≤–æ—é. üá∫üá¶",
            
            "üïØÔ∏è –û –¥–µ–≤'—è—Ç—ñ–π —Ä–∞–Ω–∫—É –∑–≥–∞–¥—É—î–º–æ –Ω–∞—à–∏—Ö –ø–æ–ª–µ–≥–ª–∏—Ö –∑–∞—Ö–∏—Å–Ω–∏–∫—ñ–≤.\n\nüíî –í–æ–Ω–∏ –±–æ—Ä–æ–Ω–∏–ª–∏ –£–∫—Ä–∞—ó–Ω—É –≤—ñ–¥ —Ç–∏—Ö, —Ö—Ç–æ —Ö–æ—Ç—ñ–≤ –∑–Ω–∏—â–∏—Ç–∏ –Ω–∞—à—É –¥–µ—Ä–∂–∞–≤—É.\n\nüôè –á—Ö–Ω—è –∂–µ—Ä—Ç–≤–∞ –Ω–µ –±—É–ª–∞ –º–∞—Ä–Ω–æ—é. –ú–∏ –ø–µ—Ä–µ–º–æ–∂–µ–º–æ! –°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ! üá∫üá¶"
        ]
    
    def get_random_memorial_message(self) -> str:
        """–ü–æ–≤–µ—Ä—Ç–∞—î –≤–∏–ø–∞–¥–∫–æ–≤–µ –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
        return random.choice(self.memorial_templates)
    
    def should_send_memorial_message(self) -> bool:
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å –ö–∏—î–≤–∞
        now = datetime.now(pytz.timezone("Europe/Kiev"))
        current_date = now.date()
        current_time = now.time()

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —á–∞—Å –º—ñ–∂ 9:00 —Ç–∞ 9:30 (–≤—ñ–∫–Ω–æ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏)
        if not (time(0, 0) <= current_time <= time(23, 59)):
            logger.info(f"[Minute of Silence] –ó–∞—Ä–∞–∑ {current_time}, –Ω–µ –≤ –≤—ñ–∫–Ω—ñ 9:00-9:30")
            return False

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –Ω–∞–¥—Å–∏–ª–∞–ª–∏ —Å—å–æ–≥–æ–¥–Ω—ñ
        if self.last_sent_date == current_date:
            logger.info("[Minute of Silence] –°—å–æ–≥–æ–¥–Ω—ñ –≤–∂–µ –Ω–∞–¥—Å–∏–ª–∞–ª–∏ –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
            return False

        return True
    
    async def send_memorial_message(self) -> bool:
        """–ù–∞–¥—Å–∏–ª–∞—î –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
        try:
            message = self.get_random_memorial_message()
            success = await self.publisher.send_simple_message(message)
            
            if success:
                self.last_sent_date = datetime.now().date()
                logger.info("‚úÖ –ú–µ–º–æ—Ä—ñ–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
                return True
            else:
                logger.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
                return False
                
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            return False
    
    async def check_and_send_memorial(self):
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∞—Å —ñ –Ω–∞–¥—Å–∏–ª–∞—î –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ"""
        if self.should_send_memorial_message():
            logger.info("üïØÔ∏è –ß–∞—Å –¥–ª—è –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (9:00 —Ä–∞–Ω–∫—É)")
            await self.send_memorial_message()
        else:
            logger.info("[Minute of Silence] –ù–µ —á–∞—Å –¥–ª—è –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
        
    async def monitor_memorial_schedule(self, check_interval: int = 60):
        """–ú–æ–Ω—ñ—Ç–æ—Ä–∏—Ç—å —Ä–æ–∑–∫–ª–∞–¥ —ñ –Ω–∞–¥—Å–∏–ª–∞—î –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
        logger.info("üïØÔ∏è –ó–∞–ø—É—â–µ–Ω–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É)")
        
        while True:
            try:
                await self.check_and_send_memorial()
                await asyncio.sleep(check_interval)  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
            except Exception as e:
                logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –º–µ–º–æ—Ä—ñ–∞–ª—å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: {e}")
                await asyncio.sleep(60)  # –ü—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ —á–µ–∫–∞—î–º–æ —Ö–≤–∏–ª–∏–Ω—É

async def schedule_minute_of_silence(bot, channel_id):
    while True:
        now = datetime.now()
        target = now.replace(hour=9, minute=0, second=0, microsecond=0)
        if now >= target:
            target += timedelta(days=1)
        wait_seconds = (target - now).total_seconds()
        logging.info(f"[Minute of Silence] Next scheduled at {target} (in {wait_seconds} seconds)")
        await asyncio.sleep(wait_seconds)
        try:
            await send_minute_of_silence(bot, channel_id)
            logging.info("[Minute of Silence] Message sent successfully.")
        except Exception as e:
            logging.error(f"[Minute of Silence] Failed to send: {e}")

async def send_minute_of_silence(bot, channel_id):
    pass  # –†–µ–∞–ª—ñ–∑—É–π—Ç–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç—É—Ç

async def send_memorial_message_daily(publisher):
    memorial_text = (
        "üïØÔ∏è –•–≤–∏–ª–∏–Ω–∞ –º–æ–≤—á–∞–Ω–Ω—è –∑–∞ –Ω–∞—à–∏–º–∏ –≥–µ—Ä–æ—è–º–∏, —è–∫—ñ –≤—ñ–¥–¥–∞–ª–∏ –∂–∏—Ç—Ç—è –∑–∞ –Ω–µ–∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –£–∫—Ä–∞—ó–Ω–∏.\n\n"
        "üíî –í—ñ—á–Ω–∞ –ø–∞–º'—è—Ç—å –∑–∞—Ö–∏—Å–Ω–∏–∫–∞–º, —è–∫—ñ –±–æ—Ä–æ–Ω–∏–ª–∏ –Ω–∞—à—É –∑–µ–º–ª—é –≤—ñ–¥ –≤–æ—Ä–æ–≥–∞.\n\n"
        "üôè –á—Ö–Ω—è –∂–µ—Ä—Ç–≤–∞ –Ω–µ –±—É–¥–µ –∑–∞–±—É—Ç–∞. –°–ª–∞–≤–∞ –ì–µ—Ä–æ—è–º! üá∫üá¶"
    )
    kyiv_tz = pytz.timezone('Europe/Kyiv')
    while True:
        now = datetime.now(kyiv_tz)
        target = now.replace(hour=9, minute=0, second=0, microsecond=0)
        if now >= target:
            target += timedelta(days=1)
        wait_seconds = (target - now).total_seconds()
        await asyncio.sleep(wait_seconds)
        try:
            await publisher.send_simple_message(memorial_text)
        except Exception as e:
            print(f"[Minute of Silence] Failed to send: {e}")
        await asyncio.sleep(60)  # —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø—Ä–æ—Ç—è–≥–æ–º —Ö–≤–∏–ª–∏–Ω–∏