#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä—ñ–æ—Ä–∏—Ç–∏–∑–∞—Ü—ñ—ó –Ω–æ–≤–∏–Ω –∑ –≤—ñ–¥–µ–æ
"""

import asyncio
import logging
from news_collector import NewsCollector
from telegram_publisher import TelegramPublisher

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_video_prioritization():
    """–¢–µ—Å—Ç—É—î –ø—Ä—ñ–æ—Ä–∏—Ç–∏–∑–∞—Ü—ñ—é –Ω–æ–≤–∏–Ω –∑ –≤—ñ–¥–µ–æ"""
    logger.info("üé• –¢–µ—Å—Ç—É—î–º–æ –ø—Ä—ñ–æ—Ä–∏—Ç–∏–∑–∞—Ü—ñ—é –Ω–æ–≤–∏–Ω –∑ –≤—ñ–¥–µ–æ...")
    
    collector = NewsCollector()
    
    # –ó–±–∏—Ä–∞—î–º–æ –Ω–æ–≤–∏–Ω–∏
    news_list = collector.collect_all_news()
    
    if not news_list:
        logger.info("üì≠ –ù–æ–≤–∏–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return
    
    logger.info(f"üì∞ –ó–Ω–∞–π–¥–µ–Ω–æ {len(news_list)} –Ω–æ–≤–∏–Ω")
    
    # –†–æ–∑–¥—ñ–ª—è—î–º–æ –Ω–æ–≤–∏–Ω–∏ –Ω–∞ –≥—Ä—É–ø–∏
    news_with_video = []
    news_without_video = []
    
    for news in news_list:
        if news.get('video_url', ''):
            news_with_video.append(news)
        else:
            news_without_video.append(news)
    
    # –í–∏–≤–æ–¥–∏–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    logger.info(f"üé• –ù–æ–≤–∏–Ω –∑ –≤—ñ–¥–µ–æ: {len(news_with_video)}")
    logger.info(f"üì∞ –ù–æ–≤–∏–Ω –±–µ–∑ –≤—ñ–¥–µ–æ: {len(news_without_video)}")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –Ω–æ–≤–∏–Ω –∑ –≤—ñ–¥–µ–æ
    if news_with_video:
        logger.info("\n=== –ü–†–ò–ö–õ–ê–î–ò –ù–û–í–ò–ù –ó –í–Ü–î–ï–û ===")
        for i, news in enumerate(news_with_video[:3]):  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 3
            logger.info(f"{i+1}. {news.get('title', '')[:60]}...")
            logger.info(f"   –î–∂–µ—Ä–µ–ª–æ: {news.get('source', '')}")
            logger.info(f"   –í—ñ–¥–µ–æ: {news.get('video_url', '')[:50]}...")
            logger.info("")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –Ω–æ–≤–∏–Ω –±–µ–∑ –≤—ñ–¥–µ–æ
    if news_without_video:
        logger.info("\n=== –ü–†–ò–ö–õ–ê–î–ò –ù–û–í–ò–ù –ë–ï–ó –í–Ü–î–ï–û ===")
        for i, news in enumerate(news_without_video[:3]):  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 3
            logger.info(f"{i+1}. {news.get('title', '')[:60]}...")
            logger.info(f"   –î–∂–µ—Ä–µ–ª–æ: {news.get('source', '')}")
            logger.info("")
    
    # –°–∏–º—É–ª—é—î–º–æ –ø—Ä—ñ–æ—Ä–∏—Ç–∏–∑–∞—Ü—ñ—é —è–∫ –≤ main.py
    import random
    
    # –ü–µ—Ä–µ–º—ñ—à—É—î–º–æ –∫–æ–∂–Ω—É –≥—Ä—É–ø—É –æ–∫—Ä–µ–º–æ
    random.shuffle(news_with_video)
    random.shuffle(news_without_video)
    
    # –û–±'—î–¥–Ω—É—î–º–æ: —Å–ø–æ—á–∞—Ç–∫—É –Ω–æ–≤–∏–Ω–∏ –∑ –≤—ñ–¥–µ–æ, –ø–æ—Ç—ñ–º –±–µ–∑ –≤—ñ–¥–µ–æ
    prioritized_news = news_with_video + news_without_video
    
    logger.info(f"\n=== –ü–†–û–†–Ü–û–†–ò–¢–ò–ó–û–í–ê–ù–ò–ô –°–ü–ò–°–û–ö ===")
    logger.info(f"–ü–µ—Ä—à—ñ {min(5, len(prioritized_news))} –Ω–æ–≤–∏–Ω:")
    
    for i, news in enumerate(prioritized_news[:5]):
        has_video = "üé•" if news.get('video_url', '') else "üì∞"
        logger.info(f"{i+1}. {has_video} {news.get('title', '')[:60]}...")
        logger.info(f"   –î–∂–µ—Ä–µ–ª–æ: {news.get('source', '')}")
        if news.get('video_url', ''):
            logger.info(f"   –í—ñ–¥–µ–æ: {news.get('video_url', '')[:50]}...")
        logger.info("")
    
    logger.info("‚úÖ –¢–µ—Å—Ç –ø—Ä—ñ–æ—Ä–∏—Ç–∏–∑–∞—Ü—ñ—ó –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    print("üé• –¢–µ—Å—Ç –ø—Ä—ñ–æ—Ä–∏—Ç–∏–∑–∞—Ü—ñ—ó –Ω–æ–≤–∏–Ω –∑ –≤—ñ–¥–µ–æ")
    print("=" * 50)
    
    asyncio.run(test_video_prioritization()) 